name: Lint
on:
  workflow_call:
    inputs:
      git_ref:
        description: 'Git reference to use'
        default: ''
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  gen_llhttp:
    name: Generate llhttp sources
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.0
      with:
        submodules: true
    - name: Cache llhttp generated files
      uses: actions/cache@v2
      id: cache
      with:
        key: llhttp-${{ hashFiles('vendor/llhttp/package.json', 'vendor/llhttp/src/**/*') }}
        path:  vendor/llhttp/build
    - name: Setup NodeJS
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Generate llhttp sources
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        make generate-llhttp
    - name: Upload llhttp generated files
      uses: actions/upload-artifact@v2
      with:
        name: llhttp
        path: vendor/llhttp/build
        if-no-files-found: error

  test:
    name: Test
    needs: gen_llhttp
    strategy:
      matrix:
        pyver: [3.7, 3.8, 3.9, '3.10']
        no-extensions: ['', 'Y']
        os: [ubuntu, macos, windows]
        exclude:
          - os: macos
            no-extensions: 'Y'
          - os: macos
            pyver: 3.7
          - os: macos
            pyver: 3.8
          - os: windows
            no-extensions: 'Y'
        # pypy 3.7 exists in beta and doesn't work well yet
        # include:
        #   - pyver: pypy3
        #     no-extensions: 'Y'
        #     os: ubuntu
      fail-fast: true
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.0
      with:
        submodules: true
    - name: Setup Python ${{ matrix.pyver }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyver }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"    # - name: Cache
    - name: Cache PyPI
      uses: actions/cache@v2.1.6
      with:
        key: pip-ci-${{ runner.os }}-${{ matrix.pyver }}-${{ matrix.no-extensions }}-${{ hashFiles('requirements/*.txt') }}
        path: ${{ steps.pip-cache.outputs.dir }}
        restore-keys: |
            pip-ci-${{ runner.os }}-${{ matrix.pyver }}-${{ matrix.no-extensions }}-
    - name: Update pip, wheel, setuptools, build, twine
      run: |
        python -m pip install -U pip wheel setuptools build twine
    - name: Install dependencies
      run: |
        python -m pip install -r requirements/test.txt -c requirements/constraints.txt
    - name: Cythonize
      if: ${{ matrix.no-extensions == '' }}
      run: |
        make cythonize
    - name: Restore llhttp generated files
      if: ${{ matrix.no-extensions == '' }}
      uses: actions/download-artifact@v2
      with:
        name: llhttp
        path: vendor/llhttp/build/
    - name: Run unittests
      env:
        COLOR: 'yes'
        AIOHTTP_NO_EXTENSIONS: ${{ matrix.no-extensions }}
      run: |
        make vvtest
        python -m coverage xml
    - name: Upload coverage
      uses: codecov/codecov-action@v2.1.0
      with:
        file: ./coverage.xml
        flags: unit
        fail_ci_if_error: false
